def calcRedundantBits(length):
     for i in range(length):
         if(2**i >= length+i+1):
             return i

def calcParityBits(arr, red):
     n = len(arr)

     for i in range(red):
         val =0

         for j in range(1, n+1):
             if(j & (2**i) == (2**i)):
                 val = val ^ int(arr[-1*j])
         arr = arr[:n-(2**i)] + str(val) + arr[n-(2**i)+1:] 
     return arr

def posRedundantBits(data, red): 
     j=0
     k=1 
     length=len(data) 
     res =''

     for i in range(1, length+red+1): 
         if(i==2**j):
             res = res + '0' 
             j += 1 
         else: 
             res= res + data[-1*k] 
             k +=1

     return res[::-1]

def detectError(arr, nr):
     n = len(arr)
     res=0

     for i in range(nr):
         val = 0
         for j in range(1, n + 1): 
             if(j & (2**i) == (2**i)):
                 val = val ^ int(arr[-1 * j]) 
         res = res + val*(10**i)
 
     return int(str(res), 2)

data = input("Enter the data to be transmitted: ") 
length = len(data)
red = calcRedundantBits(length) 
arr = posRedundantBits(data, red)
arr = calcParityBits(arr, red)
print("Data to be transferred is " + arr)
arr = input("Enter the data actually transmitted: ") 
print("Error Data is " + arr)
correction = detectError(arr, red)
if(correction==0):
     print("There is no error in the received message.") 
else:
     print("The position of error is ",len(arr)-correction+1,"from the MSB")
